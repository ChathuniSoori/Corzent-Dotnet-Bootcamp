// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskApi.Persistance;

#nullable disable

namespace TaskApi.Persistance.Migrations
{
    [DbContext(typeof(ToDoDbContext))]
    [Migration("20250803133322_AuthorEntityAndDatas")]
    partial class AuthorEntityAndDatas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Corzent_Dotnet_Bootcamp.Models.ToDos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("ToDos");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            AuthorId = 111,
                            Description = "Set up and create first web API",
                            IsCompleted = true,
                            Name = "Day 01 Tasks",
                            Priority = 0,
                            PriorityLevel = 2
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 222,
                            Description = "Create Models",
                            IsCompleted = true,
                            Name = "Day 02 Tasks",
                            Priority = 0,
                            PriorityLevel = 2
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 111,
                            Description = "Create Services",
                            IsCompleted = true,
                            Name = "Day 03 Tasks",
                            Priority = 0,
                            PriorityLevel = 2
                        });
                });

            modelBuilder.Entity("TaskApi.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 111,
                            AuthorName = "Chathuni"
                        },
                        new
                        {
                            AuthorId = 222,
                            AuthorName = "Soori"
                        });
                });

            modelBuilder.Entity("Corzent_Dotnet_Bootcamp.Models.ToDos", b =>
                {
                    b.HasOne("TaskApi.Models.Author", "Author")
                        .WithMany("ToDos")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("TaskApi.Models.Author", b =>
                {
                    b.Navigation("ToDos");
                });
#pragma warning restore 612, 618
        }
    }
}
